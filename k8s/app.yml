apiVersion: v1
kind: Service
metadata:
  name: rok
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: rok
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rok
  name: rok-deploy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rok
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rok
    spec:
      containers:
      - name: rok
        image: vuongpd95/rails-on-kubernetes:0.1
        imagePullPolicy: Never
        command: ["/bin/sh"]
        args:
          - -c
          - >-
              ln -s /var/tmp/rok/credentials/production.key /usr/src/app/config/credentials/production.key;
              ln -s /var/tmp/rok/credentials/production.yml.enc /usr/src/app/config/credentials/production.yml.enc;
              bundle exec rails server -u puma -p 3000
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 3
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: RAILS_ENV
          value: production
        ports:
        - containerPort: 3000
          name: http
        volumeMounts:
        - name: rok-rails-production-key
          mountPath: "/var/tmp/rok/credentials"
          readOnly: true
      volumes:
        - name: rok-rails-production-key
          secret:
            secretName: rok-production-credentials
            defaultMode: 0744
            items:
            - key: rails_production_key
              path: production.key
            - key: rails_production_yml_enc
              path: production.yml.enc
